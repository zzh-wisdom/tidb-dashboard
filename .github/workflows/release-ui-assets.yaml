on:
  push:
    branches:
      - master
    paths:
      - 'ui/.github_release_version'
  pull_request:
    branches:
      - master

name: Release UI Assets

jobs:
  release_assets:
    name: Release UI Assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/setup-go@v1
        with:
          go-version: '1.13.5'
      - name: Lookup yarn cache
        id: yarn_cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn_cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Yarn install from Github package
        run: make yarn_dependencies
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build UI
        run: |
          make ui
      - name: Pack UI asset release
        if: github.event_name == 'push'
        working-directory: ui/build
        run: |
          zip -r ../static-assets.zip .
      - name: Lookup asset release version
        if: github.event_name == 'push'
        id: lookup_release_version
        working-directory: ui
        run: |
          echo "::set-output name=release_version::$(grep -v '^#' .github_release_version)"
      - name: Create asset release
        if: github.event_name == 'push'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ui_release_${{ steps.lookup_release_version.outputs.release_version }}
          release_name: UI Release ${{ steps.lookup_release_version.outputs.release_version }}
          draft: false
          prerelease: false
      - name: Upload asset release
        if: github.event_name == 'push'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ui/static-assets.zip
          asset_name: static-assets.zip
          asset_content_type: application/zip
      - name: Generate embedded assets
        run: |
          NO_ASSET_BUILD_TAG=1 scripts/embed_ui_assets.sh
          cp pkg/uiserver/embedded_assets_handler.go embedded_assets_handler.go
      - name: Pack embedded assets
        if: github.event_name == 'push'
        run: |
          zip -r embedded-assets-golang.zip ./embedded_assets_handler.go
      - name: Upload embedded asset release
        if: github.event_name == 'push'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./embedded-assets-golang.zip
          asset_name: embedded-assets-golang.zip
          asset_content_type: application/zip
